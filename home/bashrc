# Concepts:
#   - https://www.tldp.org/LDP/abs/html/intandnonint.html
#   - https://unix.stackexchange.com/questions/38175/difference-between-login-shell-and-non-login-shell
#   - https://shreevatsa.wordpress.com/2008/03/30/zshbash-startup-files-loading-order-bashrc-zshrc-etc
#   - https://news.ycombinator.com/item?id=4369934
#   - https://news.ycombinator.com/item?id=4369485
#   - https://airbladesoftware.com/notes/bash-startup-files/
#   - http://www.joshstaiger.org/archives/2005/07/bash_profile_vs.html
#
#
# When Bash starts, it executes the commands in a variety of different scripts.
#
#   1) When Bash is invoked as an interactive login shell, it first reads
#      and executes commands from the file /etc/profile, if that file
#      exists. After reading that file, it looks for ~/.bash_profile,
#      ~/.bash_login, and ~/.profile, in that order, and reads and executes
#      commands from the first one that exists and is readable.
#
#   2) When a login shell exits, Bash reads and executes commands from the
#      file ~/.bash_logout, if it exists.
#
#   3) When an interactive shell that is not a login shell is started
#      (e.g. a GNU screen session), Bash reads and executes commands from
#      ~/.bashrc, if that file exists. This may be inhibited by using the
#      --norc option. The --rcfile file option will force Bash to read and
#      execute commands from file instead of ~/.bashrc.
#

# If not running interactively, return early
[[ $- != *i* ]] && return

## Aliases

alias ls="ls -F --color"
alias ll="ls -l"
alias la="ls -alh"

## Tmux
alias tl="tmux ls"
alias tn="tmux new -s"
alias ta="tmux attach -t"

## Safe
alias cp="cp -v"
alias mv="mv -v"
alias rm="rm -i -v"

## Docker
alias dc='docker'
alias dcc='docker-compose'

## Misc
alias c="clear"
alias g="git"
alias q="exit"
alias :q="exit"
alias grep="grep --color -I --exclude-dir=.git --exclude=.DS_Store"

## Auto Completions

if [ -r /usr/share/bash-completion/bash_completion ] && ! shopt -oq posix; then
    source /usr/share/bash-completion/bash_completion
    source /usr/share/bash-completion/completions/git
fi

# Make Bash complete the `g` alias just like it does `git`
complete -o default -o nospace -F _git g

## Exports

# Set US English and UTF-8 encoding
export LANG="en_US"
export LC_ALL="en_US.UTF-8"

# Use neovim when bash needs an editor
export EDITOR="nvim"

# Bash eternal history
# --------------------
#   - http://stackoverflow.com/questions/9457233/unlimited-bash-history
#
export HISTFILESIZE=-1
export HISTSIZE=-1

# Display datetime information in the output of the `history` command
export HISTTIMEFORMAT="[%F %T] "

# Change the file location because certain bash sessions truncate .bash_history file upon close
export HISTFILE=~/.bash_eternal_history

# Deduplicate bash commands history
export HISTCONTROL=ignoredups:erasedups

# Do not add these to history
export HISTIGNORE="&:q:bg:fg:df:la:ll:ls:mc:pwd:exit:clear:history:* --help"

# Make new shells obtain all previous shells history instead of the default "last window closed"
# history
export PROMPT_COMMAND="history -a; $PROMPT_COMMAND"

# Color man pages
#   - http://unix.stackexchange.com/questions/119/colors-in-man-pages/147#147
export LESS_TERMCAP_mb=$(tput bold; tput setaf 6) # cyan
export LESS_TERMCAP_md=$(tput bold; tput setaf 2) # green
export LESS_TERMCAP_me=$(tput sgr0)
export LESS_TERMCAP_so=$(tput bold; tput setaf 3; tput setab 4) # yellow on blue
export LESS_TERMCAP_se=$(tput rmso; tput sgr0)
export LESS_TERMCAP_us=$(tput smul; tput bold; tput setaf 7) # white
export LESS_TERMCAP_ue=$(tput rmul; tput sgr0)
export LESS_TERMCAP_mr=$(tput rev)
export LESS_TERMCAP_mh=$(tput dim)
export LESS_TERMCAP_ZN=$(tput ssubm)
export LESS_TERMCAP_ZV=$(tput rsubm)
export LESS_TERMCAP_ZO=$(tput ssupm)
export LESS_TERMCAP_ZW=$(tput rsupm)

## Functions

# Docker Clean: Remove dangling resources
function dc-clean() {
    echo 'Removing dangling containers'
    docker rm $(docker ps -a -q -f=status=exited) || true
    echo 'Removing dangling images'
    docker rmi -f $(docker images -q -a -f dangling=true) || true
    echo 'Removing dangling volumes'
    docker volume rm $(docker volume ls -qf dangling=true) || true
}

## Options

# Bash options
#   - https://www.gnu.org/software/bash/manual/bashref.html#The-Shopt-Builtin

# Automatically prepend `cd` to directory names e.g. `**/qux` will enter `./foo/bar/baz/qux`
shopt -s autocd

# Autocorrect typos in path names when using the `cd` command
shopt -s cdspell

# Check the window size after each command and, if necessary, update the values of `LINES` and
# `COLUMNS`
shopt -s checkwinsize

# Save all lines of a multiple-line command in the same history entry
shopt -s cmdhist

# Include filenames beginning with a "." in the filename expansion
shopt -s dotglob

# Use extended pattern matching features
shopt -s extglob

# Append to the history file rather then overwriting it
shopt -s histappend

# Do not attempt to search the PATH for possible completions when completion is attempted on an
# empty line
shopt -s no_empty_cmd_completion

# Match filenames in a case-insensitive fashion when performing filename expansion
shopt -s nocaseglob

## Paths

export PATH="$HOME/.local/bin:$PATH"
export PATH="$HOME/.local/share/coursier/bin:$PATH"
export PATH="$HOME/.cargo/bin:$PATH"
export PATH="/usr/local/go/bin:$PATH"
export PATH="$HOME/go/bin:$PATH"
export PATH="$HOME/.npm/global/bin:$PATH"

## Prompt

source "$HOME/.prompt"

## SDKMan

source "$HOME/.sdkman/bin/sdkman-init.sh"

## NVM

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"                   # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" # This loads nvm bash_completion
