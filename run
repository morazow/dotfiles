#!/usr/bin/env bash

## set -o errexit
## Exits the current script if any of statements return non-true value.
set -e

## set -o nounset
## Exits the script if an uninitialized variable is used.
set -u

## Trap errors in subshells and functions.
set -o errtrace

## If any of the commands fail with a non-zero exit code, then abort the
## entire pipeline with that exit code.
set -o pipefail

HOST_OS=$(uname)
if test "$HOST_OS" = "Darwin"; then
    echo "Running on MacOS!"
elif test "$HOST_OS" = "Linux"; then
    echo "Running on Linux!"
else
    echo "Unknown host OS: $HOST_OS"
    exit 1
fi

CWD="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$CWD"

remove_not_needed () {
    rm -f ~/.profile
    rm -f ~/.bash_logout
}

create_symlinks () {
    cd "${CWD}"/configs/
    for dot in *
    do
        if [ $dot = "vim" ]; then
            continue
        fi
        echo "Linking ${dot} file."
        rm -f "$HOME/.${dot}"
        ln -sf "${CWD}/configs/${dot}" "$HOME/.${dot}"
    done
}

setup_vim () {
    mkdir -p ~/.vim/{autoload,backup,bundle,spell,tmp,undo}/
    ln -sf "${CWD}/configs/vim/updatePlugins.sh" "$HOME/.vim/updatePlugins.sh"
    ln -sf "${CWD}/configs/vim/spell/en.utf-8.add" "$HOME/.vim/spell/en.utf-8.add"

    cd ~/.vim
    wget "https://raw.githubusercontent.com/tpope/vim-pathogen/master/autoload/pathogen.vim" -O "autoload/pathogen.vim"
    ./updatePlugins.sh
}

remove_not_needed
create_symlinks
setup_vim
